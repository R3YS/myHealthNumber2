{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport ModalScreen from \"../screens/ModalScreen\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport TabOneScreen from \"../screens/TabOneScreen\";\nimport TabTwoScreen from \"../screens/TabTwoScreen\";\nimport TabThreeScreen from \"../screens/TabThreeScreen\";\nimport TabFourScreen from \"../screens/TabFourScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return React.createElement(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme\n  }, React.createElement(RootNavigator, null));\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  return React.createElement(Stack.Navigator, null, React.createElement(Stack.Screen, {\n    name: \"Root\",\n    component: BottomTabNavigator,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NotFound\",\n    component: NotFoundScreen,\n    options: {\n      title: 'Oops!'\n    }\n  }), React.createElement(Stack.Group, {\n    screenOptions: {\n      presentation: 'modal'\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Modal\",\n    component: ModalScreen\n  })));\n}\n\nvar BottomTab = createBottomTabNavigator();\n\nfunction BottomTabNavigator() {\n  var colorScheme = useColorScheme();\n  return React.createElement(BottomTab.Navigator, {\n    initialRouteName: \"TabOne\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint\n    }\n  }, React.createElement(BottomTab.Screen, {\n    name: \"TabOne\",\n    component: TabOneScreen,\n    options: function (_options) {\n      function options(_x) {\n        return _options.apply(this, arguments);\n      }\n\n      options.toString = function () {\n        return _options.toString();\n      };\n\n      return options;\n    }(function (_ref2) {\n      var navigation = _ref2.navigation;\n      return {\n        title: 'Home',\n        headerTransparent: true,\n        headerTitle: function headerTitle() {\n          return null;\n        },\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color;\n          return React.createElement(MaterialIcons, {\n            name: \"home\",\n            size: 24,\n            color: \"black\"\n          });\n        },\n        headerRight: function headerRight() {\n          return options = {\n            headerTransparent: true\n          }, React.createElement(Pressable, {\n            onPress: function onPress() {\n              return navigation.navigate('Modal');\n            },\n            style: function style(_ref4) {\n              var pressed = _ref4.pressed;\n              return {\n                opacity: pressed ? 0.5 : 1\n              };\n            }\n          }, React.createElement(FontAwesome, {\n            name: \"info-circle\",\n            size: 25,\n            color: Colors[colorScheme].text,\n            style: {\n              marginRight: 15\n            }\n          }));\n        }\n      };\n    })\n  }), React.createElement(BottomTab.Screen, {\n    name: \"TabTwo\",\n    component: TabTwoScreen,\n    options: {\n      title: 'Activity',\n      headerShown: false,\n      headerTitle: function headerTitle() {\n        return null;\n      },\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var color = _ref5.color;\n        return React.createElement(FontAwesome5, {\n          name: \"running\",\n          size: 24,\n          color: \"black\"\n        });\n      }\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"TabThree\",\n    component: TabThreeScreen,\n    options: {\n      title: 'Diet',\n      headerShown: false,\n      headerTitle: function headerTitle() {\n        return null;\n      },\n      tabBarIcon: function tabBarIcon(_ref6) {\n        var color = _ref6.color;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"food-apple\",\n          size: 24,\n          color: \"black\"\n        });\n      }\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"TabFour\",\n    component: TabFourScreen,\n    options: {\n      title: 'Settings',\n      headerShown: false,\n      headerTitle: function headerTitle() {\n        return null;\n      },\n      tabBarIcon: function tabBarIcon(_ref7) {\n        var color = _ref7.color;\n        return React.createElement(Ionicons, {\n          name: \"md-settings-sharp\",\n          size: 24,\n          color: \"black\"\n        });\n      }\n    }\n  }));\n}\n\nfunction TabBarIcon(props) {\n  return React.createElement(FontAwesome, _extends({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"sources":["/Users/christianreyes/Desktop/FINAL VERSION/myHealthNumber2/navigation/index.tsx"],"names":["FontAwesome","createBottomTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","Colors","useColorScheme","ModalScreen","NotFoundScreen","TabOneScreen","TabTwoScreen","TabThreeScreen","TabFourScreen","LinkingConfiguration","MaterialIcons","FontAwesome5","MaterialCommunityIcons","Ionicons","Navigation","colorScheme","Stack","RootNavigator","BottomTabNavigator","headerShown","title","presentation","BottomTab","tabBarActiveTintColor","tint","navigation","headerTransparent","headerTitle","tabBarIcon","color","headerRight","options","navigate","pressed","opacity","text","marginRight","TabBarIcon","props","marginBottom"],"mappings":";AAKA,SAASA,WAAT,QAA4B,oBAA5B;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,mBAAT,EAA8BC,YAA9B,EAA4CC,SAA5C,QAA6D,0BAA7D;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAGA,OAAOC,MAAP;AACA,OAAOC,cAAP;AACA,OAAOC,WAAP;AACA,OAAOC,cAAP;AACA,OAAOC,YAAP;AACA,OAAOC,YAAP;AACA,OAAOC,cAAP;AACA,OAAOC,aAAP;AAEA,OAAOC,oBAAP;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,eAAe,SAASC,UAAT,OAAuE;AAAA,MAAjDC,WAAiD,QAAjDA,WAAiD;AACpF,SACE,oBAAC,mBAAD;AACE,IAAA,OAAO,EAAEN,oBADX;AAEE,IAAA,KAAK,EAAEM,WAAW,KAAK,MAAhB,GAAyBjB,SAAzB,GAAqCD;AAF9C,KAGE,oBAAC,aAAD,OAHF,CADF;AAOD;AAMD,IAAMmB,KAAK,GAAGjB,0BAA0B,EAAxC;;AAEA,SAASkB,aAAT,GAAyB;AACvB,SACE,oBAAC,KAAD,CAAO,SAAP,QACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEC,kBAArC;AAAyD,IAAA,OAAO,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf;AAAlE,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAEf,cAAzC;AAAyD,IAAA,OAAO,EAAE;AAAEgB,MAAAA,KAAK,EAAE;AAAT;AAAlE,IAFF,EAGE,oBAAC,KAAD,CAAO,KAAP;AAAa,IAAA,aAAa,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB;AAA5B,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,SAAS,EAAElB;AAAtC,IADF,CAHF,CADF;AASD;;AAMD,IAAMmB,SAAS,GAAG3B,wBAAwB,EAA1C;;AAEA,SAASuB,kBAAT,GAA8B;AAC5B,MAAMH,WAAW,GAAGb,cAAc,EAAlC;AAEA,SACE,oBAAC,SAAD,CAAW,SAAX;AACE,IAAA,gBAAgB,EAAC,QADnB;AAEE,IAAA,aAAa,EAAE;AACbqB,MAAAA,qBAAqB,EAAEtB,MAAM,CAACc,WAAD,CAAN,CAAoBS;AAD9B;AAFjB,KAKE,oBAAC,SAAD,CAAW,MAAX;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAEnB,YAFb;AAGE,IAAA,OAAO;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,MAAE;AAAA,UAAGoB,UAAH,SAAGA,UAAH;AAAA,aAAkD;AACzDL,QAAAA,KAAK,EAAE,MADkD;AAEzDM,QAAAA,iBAAiB,EAAE,IAFsC;AAGzDC,QAAAA,WAAW,EAAC,uBAAM;AAAC,iBAAO,IAAP;AAAY,SAH0B;AAIzDC,QAAAA,UAAU,EAAE;AAAA,cAAGC,KAAH,SAAGA,KAAH;AAAA,iBAAe,oBAAC,aAAD;AAAe,YAAA,IAAI,EAAC,MAApB;AAA2B,YAAA,IAAI,EAAE,EAAjC;AAAqC,YAAA,KAAK,EAAC;AAA3C,YAAf;AAAA,SAJ6C;AAKzDC,QAAAA,WAAW,EAAE;AAAA,iBACXC,OAAO,GAAE;AAACL,YAAAA,iBAAiB,EAAE;AAApB,WAAT,EACA,oBAAC,SAAD;AACE,YAAA,OAAO,EAAE;AAAA,qBAAMD,UAAU,CAACO,QAAX,CAAoB,OAApB,CAAN;AAAA,aADX;AAEE,YAAA,KAAK,EAAE;AAAA,kBAAGC,OAAH,SAAGA,OAAH;AAAA,qBAAkB;AACvBC,gBAAAA,OAAO,EAAED,OAAO,GAAG,GAAH,GAAS;AADF,eAAlB;AAAA;AAFT,aAKE,oBAAC,WAAD;AACE,YAAA,IAAI,EAAC,aADP;AAEE,YAAA,IAAI,EAAE,EAFR;AAGE,YAAA,KAAK,EAAEhC,MAAM,CAACc,WAAD,CAAN,CAAoBoB,IAH7B;AAIE,YAAA,KAAK,EAAE;AAAEC,cAAAA,WAAW,EAAE;AAAf;AAJT,YALF,CAFW;AAAA;AAL4C,OAAlD;AAAA,KAAF;AAHT,IALF,EA8BE,oBAAC,SAAD,CAAW,MAAX;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAE9B,YAFb;AAGE,IAAA,OAAO,EAAE;AACPc,MAAAA,KAAK,EAAE,UADA;AAEPD,MAAAA,WAAW,EAAE,KAFN;AAGPQ,MAAAA,WAAW,EAAC,uBAAM;AAAC,eAAO,IAAP;AAAY,OAHxB;AAIPC,MAAAA,UAAU,EAAE;AAAA,YAAGC,KAAH,SAAGA,KAAH;AAAA,eAAe,oBAAC,YAAD;AAAc,UAAA,IAAI,EAAC,SAAnB;AAA6B,UAAA,IAAI,EAAE,EAAnC;AAAuC,UAAA,KAAK,EAAC;AAA7C,UAAf;AAAA;AAJL;AAHX,IA9BF,EAwCE,oBAAC,SAAD,CAAW,MAAX;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAEtB,cAFb;AAGE,IAAA,OAAO,EAAE;AACPa,MAAAA,KAAK,EAAE,MADA;AAEPD,MAAAA,WAAW,EAAE,KAFN;AAGPQ,MAAAA,WAAW,EAAC,uBAAM;AAAC,eAAO,IAAP;AAAY,OAHxB;AAIPC,MAAAA,UAAU,EAAE;AAAA,YAAGC,KAAH,SAAGA,KAAH;AAAA,eAAe,oBAAC,sBAAD;AAAwB,UAAA,IAAI,EAAC,YAA7B;AAA0C,UAAA,IAAI,EAAE,EAAhD;AAAoD,UAAA,KAAK,EAAC;AAA1D,UAAf;AAAA;AAJL;AAHX,IAxCF,EAkDE,oBAAC,SAAD,CAAW,MAAX;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,SAAS,EAAErB,aAFb;AAGE,IAAA,OAAO,EAAE;AACPY,MAAAA,KAAK,EAAE,UADA;AAEPD,MAAAA,WAAW,EAAE,KAFN;AAGPQ,MAAAA,WAAW,EAAC,uBAAM;AAAC,eAAO,IAAP;AAAY,OAHxB;AAIPC,MAAAA,UAAU,EAAE;AAAA,YAAGC,KAAH,SAAGA,KAAH;AAAA,eAAe,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAC,mBAAf;AAAmC,UAAA,IAAI,EAAE,EAAzC;AAA6C,UAAA,KAAK,EAAC;AAAnD,UAAf;AAAA;AAJL;AAHX,IAlDF,CADF;AA+DD;;AAKD,SAASQ,UAAT,CAAoBC,KAApB,EAGG;AACD,SAAO,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAE,EAAnB;AAAuB,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE,CAAC;AAAjB;AAA9B,KAAwDD,KAAxD,EAAP;AACD","sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport TabOneScreen from '../screens/TabOneScreen';\nimport TabTwoScreen from '../screens/TabTwoScreen';\nimport TabThreeScreen from '../screens/TabThreeScreen';\nimport TabFourScreen from '../screens/TabFourScreen';\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"TabOne\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].tint,\n      }}>\n      <BottomTab.Screen\n        name=\"TabOne\"\n        component={TabOneScreen}\n        options={({ navigation}: RootTabScreenProps<'TabOne'>) => ({\n          title: 'Home',\n          headerTransparent: true,\n          headerTitle:() => {return null},\n          tabBarIcon: ({ color }) => <MaterialIcons name=\"home\" size={24} color=\"black\" />,\n          headerRight: () => (\n            options= {headerTransparent: true},\n            <Pressable\n              onPress={() => navigation.navigate('Modal')}\n              style={({ pressed }) => ({\n                opacity: pressed ? 0.5 : 1,\n              })}>\n              <FontAwesome\n                name=\"info-circle\"\n                size={25}\n                color={Colors[colorScheme].text}\n                style={{ marginRight: 15 }}\n              />\n            </Pressable>\n          ),\n        })}\n      />\n      <BottomTab.Screen\n        name=\"TabTwo\"\n        component={TabTwoScreen}\n        options={{\n          title: 'Activity',\n          headerShown: false,\n          headerTitle:() => {return null},\n          tabBarIcon: ({ color }) => <FontAwesome5 name=\"running\" size={24} color=\"black\" />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"TabThree\"\n        component={TabThreeScreen}\n        options={{\n          title: 'Diet',\n          headerShown: false,\n          headerTitle:() => {return null},\n          tabBarIcon: ({ color }) => <MaterialCommunityIcons name=\"food-apple\" size={24} color=\"black\" />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"TabFour\"\n        component={TabFourScreen}\n        options={{\n          title: 'Settings',\n          headerShown: false,\n          headerTitle:() => {return null},\n          tabBarIcon: ({ color }) => <Ionicons name=\"md-settings-sharp\" size={24} color=\"black\" />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n"]},"metadata":{},"sourceType":"module"}