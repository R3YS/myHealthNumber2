{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, View } from \"../components/Themed\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport \"./global.js\";\nexport default function ModalScreen() {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setName = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      age = _React$useState4[0],\n      setAge = _React$useState4[1];\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      weight = _React$useState6[0],\n      setWeight = _React$useState6[1];\n\n  var _React$useState7 = React.useState(null),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      height = _React$useState8[0],\n      setHeight = _React$useState8[1];\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.title\n  }, global.name, \"'s Information\"), React.createElement(Text, {\n    style: styles.title\n  }, \"Go Ahead and Change the Info, We'll Take Care of The Rest\"), React.createElement(View, {\n    style: styles.separator,\n    lightColor: \"#eee\",\n    darkColor: \"rgba(255,255,255,0.1)\"\n  }), React.createElement(Text, {\n    style: styles.subtitle\n  }, \"Name:\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: global.name,\n    onChangeText: function onChangeText(value) {\n      return setName(value);\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setAge,\n    value: age,\n    placeholder: global.age,\n    keyboardType: \"numeric\"\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setHeight,\n    value: height,\n    placeholder: global.height,\n    keyboardType: \"numeric\"\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: setWeight,\n    value: weight,\n    placeholder: global.weight,\n    keyboardType: \"numeric\"\n  }), React.createElement(Button, {\n    title: \"Press me\",\n    onPress: function onPress() {\n      global.name = name, global.age = age;\n    }\n  }), React.createElement(StatusBar, {\n    style: Platform.OS === 'ios' ? 'light' : 'auto'\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    marginVertical: 20\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    color: 'white'\n  },\n  subtitle: {\n    fontSize: 10,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["/Users/christianreyes/Desktop/FINAL VERSION/myHealthNumber2/screens/ModalScreen.tsx"],"names":["StatusBar","React","Text","View","ModalScreen","useState","name","setName","age","setAge","weight","setWeight","height","setHeight","styles","container","title","global","separator","subtitle","input","value","Platform","OS","StyleSheet","create","flex","alignItems","justifyContent","marginVertical","fontSize","fontWeight","width","margin","borderWidth","padding","color"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport * as React from 'react';\nimport { Platform, StyleSheet } from 'react-native';\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\nimport { SafeAreaView,TextInput } from 'react-native';\nimport { Button, Alert} from \"react-native\";\nimport './global.js';\n\nexport default function ModalScreen() {\n  //I set up constants for each variable. These do not reference Global Varaibles YET but will be copied in the Function\n  const [name, setName] = React.useState(\"\");\n  const [age, setAge] = React.useState(null);\n  const [weight, setWeight] = React.useState(null);\n  const [height, setHeight] = React.useState(null);\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{global.name}'s Information</Text>\n      <Text style={styles.title}>Go Ahead and Change the Info, We'll Take Care of The Rest</Text>\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      <Text style={styles.subtitle}>Name:</Text>\n      <TextInput style={styles.input} placeholder = {global.name} onChangeText={(value) => setName(value)}  />\n      <TextInput style={styles.input} onChangeText={setAge} value={age} placeholder = {global.age} keyboardType=\"numeric\" />\n      <TextInput style={styles.input} onChangeText={setHeight} value={height} placeholder = {global.height} keyboardType=\"numeric\" />\n      <TextInput style={styles.input} onChangeText={setWeight} value={weight} placeholder = {global.weight} keyboardType=\"numeric\" />\n      <Button title=\"Press me\" onPress={() => {global.name = name, global.age = age}} />\n      {/* Use a light status bar on iOS to account for the black space above the modal */}\n      <StatusBar style={Platform.OS === 'ios' ? 'light' : 'auto'} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    marginVertical: 20\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n    color: 'white',\n  },\n  subtitle: {\n    fontSize: 10,\n    fontWeight: 'bold',\n  },\n\n});\n"]},"metadata":{},"sourceType":"module"}